name: Test Action 

on: 
  pull_request:
    
jobs:
  test-action-created-pr:
    outputs:
      createdPrNumber: ${{ steps.update-deps.outputs.pull_request_number }} 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run this Action 
      id: update-deps
      uses: ./
    
    - name: Get pull request that was created 
      uses: actions/github-script@v6
      with:
        script: |
          let createdPull = await github.rest.pulls.get({
            pull_number: ${{ steps.update-deps.outputs.pull_request_number }},
            owner: context.repo.owner,
            repo: context.repo.repo
          })

          let isPrOpen = createdPull.state == "open"
          let isPrAuthorExpected = createdPull.user.login = "" 
          let prBranchExpected = createdPull.head.ref = ""
          let destinationBranchExpected = createdPull.base.ref = ""
          
  test-action-reuses-pr:
    needs: [test-action-created-pr]    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Close existing open PR     
      uses: actions/github-script@v6
      with:
        script: |
          let createdPull = await github.rest.pulls.update({
            pull_number: ${{ needs.test-action-created-pr.outputs.pull_request_number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: "closed"
          })

    - name: Run this Action to re-use existing closed PR 
      id: update-deps
      uses: ./
    
    - name: Get pull request that was opened again 
      uses: actions/github-script@v6
      with:
        script: |
          let createdPull = await github.rest.pulls.get({
            pull_number: ${{ steps.update-deps.outputs.pull_request_number }},
            owner: context.repo.owner,
            repo: context.repo.repo
          })

          let isPrOpen = createdPull.state == "open"
          let isPrAuthorExpected = createdPull.user.login = "" 
          let prBranchExpected = createdPull.head.ref = ""
          let destinationBranchExpected = createdPull.base.ref = ""
          